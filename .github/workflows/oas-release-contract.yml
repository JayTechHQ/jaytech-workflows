name: oas-release-contract

on:
  workflow_call:
    inputs:
      namespace:
        type: string
        description: The application name (repository name without api/contract/ui)
        required: true
      dotnet-version:
        type: string
        description: Specify which .NET version to use
        required: false
        default: "9.x"
      spectral-validation:
        type: boolean
        description: Validate the contract against JayTech's spectral rules?
        default: true
    secrets:
      pat-github:
        description: GitHub PAT
        required: true
      azure-api-key:
        description: The Azure API key
        required: false
      azure-source:
        description: The Azure Artifacts Source
        required: false
      azure-feed:
        description: The Azure Artifacts Feed
        required: false

jobs:
  oas-release-contract:
    name: oas-release-contract
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.pat-github }}
          path: workflow/repository
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Determine Semantic Version
        id: semver
        uses: JayTechHQ/jaytech-actions/gitversion-generate-semver@master

      - name: Inject semantic version into OAS
        run: |
          sed -i "s/{{OAS_VERSION}}/${{ steps.semver.outputs.semantic-version }}/g" ./workflow/repository/src/oas.yaml

      - if: ${{ inputs.spectral-validation == true }}
        name: Spectral validation
        run: |
          npm install -g @stoplight/spectral
          spectral lint ./workflow/repository/src/oas.yaml -r https://spectral.jaytech.nl/spectral-ruleset.yaml

      - name: Checkout Client Generator
        uses: actions/checkout@v3
        with:
          repository: JayTechHQ/jaytech-generators-oas-client
          token: ${{ secrets.pat-github }}
          path: workflow/client-generator
          fetch-depth: 0

      - name: Add JayTech NuGet Feed
        run: |
          dotnet nuget add source "${{ secrets.azure-source }}" \
            --name "${{ secrets.azure-feed }}" \
            --username "github-actions" \
            --password "${{ secrets.azure-api-key }}" \
            --store-password-in-clear-text

      - name: Run Client Generator
        shell: bash
        run: |
          sed -i "s~{{IN}}~../../../../../workflow/repository/src/oas.yaml~g" ./workflow/client-generator/Source/Assemblies/JayTech.Clis.ClientGeneration/Properties/launchSettings.json
          sed -i "s~{{OUT}}~../../../../../workflow/repository/generated~g" ./workflow/client-generator/Source/Assemblies/JayTech.Clis.ClientGeneration/Properties/launchSettings.json
          sed -i "s~{{NAMESPACE}}~${{ inputs.namespace }}~g" ./workflow/client-generator/Source/Assemblies/JayTech.Clis.ClientGeneration/Properties/launchSettings.json
          sed -i "s~{{AZURE_API_KEY}}~${{ secrets.azure-api-key }}~g" ./workflow/client-generator/nuget.config
          cd ./workflow/client-generator/Source/Assemblies/JayTech.Clis.ClientGeneration
          dotnet run --launch-profile Production

      - name: Push to Azure Artifacts
        uses: JayTechHQ/jaytech-actions/dotnet-publish-nuget-packages@master
        with:
          software-version: ${{ steps.semver.outputs.semantic-version }}
          project-folder: ./workflow/repository/generated
          azure-api-key: ${{ secrets.azure-api-key }}
          azure-source: ${{ secrets.azure-source }}
          azure-feed: ${{ secrets.azure-feed }}
          add-source: "true"
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Tag & Release
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.semver.outputs.semantic-version }}
          tag_name: ${{ steps.semver.outputs.semantic-version }}
        env:
          GITHUB_TOKEN: ${{ secrets.pat-github }}

      - name: Cleanup Old Tags & Releases
        if: github.ref == 'refs/heads/master'
        uses: JayTechHQ/jaytech-actions/github-clean-releases@master
        with:
          token: ${{ secrets.pat-github }}
          semantic-version: ${{ steps.semver.outputs.semantic-version }}
          keep: 10
          clean-prereleases: "true"
          clean-old-releases: "true"
