name: quasar-release-web

on:
  workflow_call:
    inputs:
      application-name:
        type: string
        required: true
        description: App name, used for environment repo naming

      environment-name:
        type: string
        required: false
        default: environment

      replacements-in:
        type: string
        required: false
        default: ""

      source-folder:
        type: string
        required: false
        default: "./workflow/repository"

      sync-environment:
        type: string
        required: false
        default: "false"

      scope:
        type: string
        required: false
        default: ""

    secrets:
      pat-github:
        required: true
        description: GitHub PAT with access to environment repo and release assets

      replacements-out:
        required: false
        description: Placeholder values (tilde-separated)

      scope-key:
        required: false
        description: Optional scope key for NPM access or auth headers

jobs:
  quasar-release-web:
    name: quasar-release-web
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.pat-github }}
          path: workflow/repository
          fetch-depth: 0

      - name: Replace placeholders
        uses: JayTechHQ/jaytech-actions/common-replace-placeholders@master
        with:
          directory: workflow/repository
          replacements-in: ${{ inputs.replacements-in }}
          replacements-out: ${{ secrets.replacements-out }}
          
      - name: Determine Semantic Version
        id: semver
        uses: JayTechHQ/jaytech-actions/gitversion-generate-semver@master

      - name: Use project-level .npmrc if present
        run: |
          if [ -f "workflow/repository/.npmrc" ]; then
            echo "Using repo .npmrc"
            cp "workflow/repository/.npmrc" ~/.npmrc
            cat ~/.npmrc
          else
            echo "No .npmrc found in project"
          fi
        shell: bash

      - name: Install NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 20
          
      - name: Quasar Build Web
        working-directory: workflow/repository
        run: |
          npm install
          npm i -g @quasar/cli
          npm run lint || true
          quasar build
        shell: bash
        
      - name: TAR Web Output
        working-directory: workflow/repository/dist/spa
        run: |
          tar -czvf quasar-web.tar.gz ./*

      - name: Create GitHub Release
        working-directory: workflow/repository
        env:
          GH_TOKEN: ${{ secrets.pat-github }}
        run: |
          gh release create "${{ steps.semver.outputs.semantic-version }}" \
            --title "${{ steps.semver.outputs.semantic-version }}" \
            --notes "" \
            $([[ "${{ github.ref }}" != "refs/heads/master" ]] && echo "--prerelease") || echo "⚠️ Release already exists, continuing..."

      - name: Upload quasar-web.tar.gz
        working-directory: workflow/repository/dist/spa
        env:
          GH_TOKEN: ${{ secrets.pat-github }}
        run: |
          gh release upload "${{ steps.semver.outputs.semantic-version }}" quasar-web.tar.gz --clobber


      - if: ${{ inputs.sync-environment == 'true' }}
        name: Checkout GitOps repo
        uses: actions/checkout@v3
        with:
          ref: development
          repository: ${{ github.repository_owner }}/${{ inputs.application-name }}-${{ inputs.environment-name }}
          token: ${{ secrets.pat-github }}
          path: workflow/gitops

      - if: ${{ inputs.sync-environment == 'true' }}
        name: Set GitOps version
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: "./workflow/gitops/version-ui.yml"
          propertyPath: "version"
          value: ${{ steps.semver.outputs.semantic-version }}
          commitChange: false
          updateFile: true

      - if: ${{ inputs.sync-environment == 'true' }}
        name: Push GitOps update
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@v1.7.2
        env:
          API_TOKEN_GITHUB: ${{ secrets.pat-github }}
        with:
          source-directory: workflow/gitops
          destination-github-username: ${{ github.repository_owner }}
          destination-repository-name: ${{ inputs.application-name }}-${{ inputs.environment-name }}
          commit-message: '[UI-v${{ steps.semver.outputs.semantic-version }}] - ${{ github.event.head_commit.message }}'
          target-branch: development

      - name: Clean up old tags and releases
        if: github.ref == 'refs/heads/master'
        uses: JayTechHQ/jaytech-actions/github-clean-releases@master
        with:
          keep: 10
          token: ${{ secrets.pat-github }}
          semantic-version: ${{ steps.semver.outputs.semantic-version }}
          clean-prereleases: "true"
          clean-old-releases: "true"
